import java.io.FileInputStream;  
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import java.io.IOException;  
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFSheet;  
import org.apache.poi.hssf.usermodel.HSSFWorkbook;  
import org.apache.poi.ss.usermodel.Cell;  
import org.apache.poi.ss.usermodel.FormulaEvaluator;  
import org.apache.poi.ss.usermodel.Row; 
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Administrator
 */
public class SDC_Generator extends javax.swing.JFrame {

    /**
     * Creates new form SDC_Generator
     */
    public SDC_Generator() {
        initComponents();
    }
public void initComponents_public()
{
        Heading1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        source_path = new javax.swing.JTextField();
        dest_path = new javax.swing.JTextField();
        browse_dest = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        Heading1.setBackground(new java.awt.Color(38, 213, 211));
        Heading1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        Heading1.setForeground(new java.awt.Color(255, 255, 255));
        Heading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading1.setText("SDC Generator");
        Heading1.setOpaque(true);

        jLabel1.setText("Path To Excel File");

        jLabel2.setText("Destination File Path");

        browse_dest.setBackground(new java.awt.Color(40, 219, 217));
        browse_dest.setForeground(new java.awt.Color(255, 255, 255));
        browse_dest.setText("Browse");
        browse_dest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_destActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Heading1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dest_path, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(source_path))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browse_dest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Heading1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(source_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dest_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse_dest))
                .addGap(0, 92, Short.MAX_VALUE))
        );

        pack();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Heading1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        source_path = new javax.swing.JTextField();
        dest_path = new javax.swing.JTextField();
        browse_dest = new javax.swing.JButton();
        generate = new javax.swing.JButton();
        browse_source = new javax.swing.JButton();
        copyright2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        Heading1.setBackground(new java.awt.Color(38, 213, 211));
        Heading1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        Heading1.setForeground(new java.awt.Color(255, 255, 255));
        Heading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading1.setText("SDC Generator");
        Heading1.setOpaque(true);

        jLabel1.setText("Path To Excel File            :");

        jLabel2.setText("Destination Folder Path  :");

        source_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                source_pathActionPerformed(evt);
            }
        });

        browse_dest.setBackground(new java.awt.Color(40, 219, 217));
        browse_dest.setForeground(new java.awt.Color(255, 255, 255));
        browse_dest.setText("Browse");
        browse_dest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_destActionPerformed(evt);
            }
        });

        generate.setBackground(new java.awt.Color(40, 219, 217));
        generate.setForeground(new java.awt.Color(255, 255, 255));
        generate.setText("Generate");
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        browse_source.setBackground(new java.awt.Color(40, 219, 217));
        browse_source.setForeground(new java.awt.Color(255, 255, 255));
        browse_source.setText("Browse");
        browse_source.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_sourceActionPerformed(evt);
            }
        });

        copyright2.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        copyright2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/struent_logo.png"))); // NOI18N
        copyright2.setText("Â© Copyright 2022 Struent Semiconductors ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Heading1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(copyright2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(source_path, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(dest_path))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(browse_source)
                            .addComponent(browse_dest))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Heading1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(browse_source, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(source_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(browse_dest, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dest_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copyright2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browse_destActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse_destActionPerformed
        JFileChooser chooser = new JFileChooser(new File(System.getProperty("user.home") + "\\Downloads")); //Downloads Directory as default
        chooser.setDialogTitle("Select Location");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            String filepath = chooser.getSelectedFile().getPath();
            dest_path.setText(filepath);
        }
    }//GEN-LAST:event_browse_destActionPerformed

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        FileInputStream fis;
        File file;
        try{
        file = new File(source_path.getText());  
            fis = new FileInputStream(file); 
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Invalid Source Path Provided");
            return;
        }
        XSSFWorkbook wb;
        try {
            wb = new XSSFWorkbook(fis);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Unable to open the specified Excel Workbook.");
            return;
        }
        FileWriter fw;
        for(int i=0;i<wb.getNumberOfSheets();i++){
            String spth=source_path.getText().replace('/','\\');
            int indx=spth.lastIndexOf('\\');
            int endx=spth.lastIndexOf('.');
            endx=(endx==-1)?spth.length():endx;
            indx=(indx==-1)?0:indx;
            try {
                
                fw = new FileWriter(dest_path.getText()+'\\'+spth.substring(indx+1,endx)+"_s"+(i+1)+".txt");
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null,"Invalid Destination Path Provided");
                return;
            }
        XSSFSheet sheet = wb.getSheetAt(i);
        Iterator<Row> itr = sheet.iterator(); 
        while (itr.hasNext())                 
        {  
        Row row = itr.next();  
        Iterator<Cell> cellIterator = row.cellIterator();
        while (cellIterator.hasNext())   
        {  
        Cell cell = cellIterator.next();  
            try {
                fw.write(cell.getStringCellValue() + "\t");
            } catch (Exception ex) {
            try {
                fw.write(cell.getNumericCellValue() + "\t");
            } catch (Exception ex1) {
            }
           
            }
        }
                try {
                    fw.write("\n");
                } catch (IOException ex) {
                }
        } 
        
        try {
            fw.close();
        } catch (IOException ex) {
        }
        }
        try {
            fis.close();
        } catch (IOException ex) {
        }
        JOptionPane.showMessageDialog(null,"SDC Generator Functions are removed for upholding confidentiality.\nInstead the excel sheets have been read, converted and stored as text files successfully!");
    }//GEN-LAST:event_generateActionPerformed

    private void source_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_source_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_source_pathActionPerformed

    private void browse_sourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse_sourceActionPerformed
        JFileChooser chooser = new JFileChooser(new File(System.getProperty("user.home") + "\\Downloads")); //Downloads Directory as default
        chooser.setDialogTitle("Select Location");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            String filepath = chooser.getSelectedFile().getPath();
            source_path.setText(filepath);
        }
    }//GEN-LAST:event_browse_sourceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SDC_Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SDC_Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SDC_Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SDC_Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SDC_Generator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Heading1;
    private javax.swing.JButton browse_dest;
    private javax.swing.JButton browse_source;
    private javax.swing.JLabel copyright2;
    private javax.swing.JTextField dest_path;
    private javax.swing.JButton generate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField source_path;
    // End of variables declaration//GEN-END:variables
}
